cmdhistory=["(ns rdl.jpl)" "(defrel 'mother [\:SELF \:CHILD])" "(query\\n  (assert-rel 'mother {\:SELF 'sue \:CHILD 'kaylen}))" "(query\\n  (rel 'mother {\:SELF \:X}))" "(query\\n  (rel 'mother {\:SELF \:X \:CHILD \:Y}))" "(query\\n  (rel 'mother {\:SELF \:X \:CHILD \:X}))" "(compile 'rdl.interop.Relation)" "(compile 'rdl.interop.RDLInterface)" "(compile *1)" "(compile 'rdl.interop.RDLInterface)" "(ancestors IPersistentMap)" "(ancestors clojure.lang.IPersistentMap)" "(compile 'rdl.interop.Rule)" "(compile 'rdl.interop.RDLInterface)" ";; Switching to rdl.interop.RDLInterface namespace" "(compile 'rdl.interop.RDLInterface)" "(copmile 'rdl.interop.RDLRule)" "(compile 'rdl.interop.RDLRule)" "(compile 'rdl.interop.RDLRelation)" ";; Switching to rdl.interop.RDLRule namespace" "(compile 'rdl.interop.RDLRule)" "(compile 'rdl.interop.RDLRelation)" "(compile 'rdl.interop.RDLInterface)" "(compile 'rdl.interop.RDLRule)" "(compile 'rdl.interop.RDLInterface)" "(compile 'rdl.interop.RDLRelation)" "(compile 'rdl.interop.RDLInterface)" "(compile 'rdl.interop.RDLRule)" ";; Switching to rdl.interop.RDLRule namespace" "(compile 'rdl.interop.RDLRule)" "(compile 'rdl.interop.RDLRelation)"]
eclipse.preferences.version=1
